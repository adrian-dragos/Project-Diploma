// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230524125730_Seed-Instructor-Car")]
    partial class SeedInstructorCar
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Authorization.Policy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Policy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 338, DateTimeKind.Unspecified).AddTicks(8704), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Name = "SeeAllUsers"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 338, DateTimeKind.Unspecified).AddTicks(8704), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Name = "UpdateInstructorProfile"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 338, DateTimeKind.Unspecified).AddTicks(8704), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Name = "UpdateUserProfile"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Authorization.PolicyRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PolicyId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId", "PolicyId");

                    b.HasIndex("PolicyId");

                    b.ToTable("PolicyRole");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PolicyId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 339, DateTimeKind.Unspecified).AddTicks(3394), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Id = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PolicyId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 339, DateTimeKind.Unspecified).AddTicks(3394), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Id = 2
                        },
                        new
                        {
                            RoleId = 2,
                            PolicyId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 339, DateTimeKind.Unspecified).AddTicks(3394), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Id = 3
                        },
                        new
                        {
                            RoleId = 3,
                            PolicyId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 339, DateTimeKind.Unspecified).AddTicks(3394), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Id = 4
                        });
                });

            modelBuilder.Entity("Domain.Entities.Authorization.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 340, DateTimeKind.Unspecified).AddTicks(6254), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 340, DateTimeKind.Unspecified).AddTicks(6254), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Name = "Student"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 340, DateTimeKind.Unspecified).AddTicks(6254), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Name = "Instructor"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarGear")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Year")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarGear = 1,
                            Color = "purple",
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Manufacturer = "Bugatti",
                            Model = "Mustang",
                            RegistrationNumber = "TM 430 YQX",
                            Vin = "7TL35X5PDDZY39623",
                            Year = new DateTime(2019, 6, 4, 13, 40, 10, 585, DateTimeKind.Local).AddTicks(3280)
                        },
                        new
                        {
                            Id = 2,
                            CarGear = 2,
                            Color = "green",
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Manufacturer = "Smart",
                            Model = "Civic",
                            RegistrationNumber = "TM 944 UJR",
                            Vin = "XKB836IAYXP949127",
                            Year = new DateTime(2018, 7, 2, 8, 34, 48, 360, DateTimeKind.Local).AddTicks(1766)
                        },
                        new
                        {
                            Id = 3,
                            CarGear = 1,
                            Color = "green",
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Manufacturer = "Cadillac",
                            Model = "A8",
                            RegistrationNumber = "TM 961 VRA",
                            Vin = "0U1A92LC6KEL64578",
                            Year = new DateTime(2019, 1, 4, 18, 59, 27, 764, DateTimeKind.Local).AddTicks(6342)
                        },
                        new
                        {
                            Id = 4,
                            CarGear = 1,
                            Color = "purple",
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Manufacturer = "Bugatti",
                            Model = "Prius",
                            RegistrationNumber = "TM 208 JGC",
                            Vin = "7G6E7FZQT4F822237",
                            Year = new DateTime(2018, 5, 28, 4, 33, 10, 906, DateTimeKind.Local).AddTicks(9295)
                        },
                        new
                        {
                            Id = 5,
                            CarGear = 1,
                            Color = "blue",
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Manufacturer = "Porsche",
                            Model = "911",
                            RegistrationNumber = "TM 117 OKU",
                            Vin = "PHDC6CEV81BS91672",
                            Year = new DateTime(2021, 1, 29, 12, 31, 21, 472, DateTimeKind.Local).AddTicks(1086)
                        },
                        new
                        {
                            Id = 6,
                            CarGear = 2,
                            Color = "red",
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Manufacturer = "Hyundai",
                            Model = "Taurus",
                            RegistrationNumber = "TM 654 SIZ",
                            Vin = "M41J0Q8EN9SP14212",
                            Year = new DateTime(2020, 3, 30, 23, 13, 12, 129, DateTimeKind.Local).AddTicks(2695)
                        },
                        new
                        {
                            Id = 7,
                            CarGear = 2,
                            Color = "yellow",
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Manufacturer = "Dodge",
                            Model = "XC90",
                            RegistrationNumber = "TM 885 VRD",
                            Vin = "4DBC1C7AFRS137035",
                            Year = new DateTime(2018, 12, 6, 10, 23, 31, 248, DateTimeKind.Local).AddTicks(2166)
                        },
                        new
                        {
                            Id = 8,
                            CarGear = 1,
                            Color = "green",
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Manufacturer = "Hyundai",
                            Model = "Element",
                            RegistrationNumber = "TM 833 BKH",
                            Vin = "UARCFYGD5VKN48345",
                            Year = new DateTime(2021, 2, 27, 20, 23, 42, 374, DateTimeKind.Local).AddTicks(8181)
                        },
                        new
                        {
                            Id = 9,
                            CarGear = 2,
                            Color = "blue",
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Manufacturer = "Kia",
                            Model = "Cruze",
                            RegistrationNumber = "TM 884 IIX",
                            Vin = "HG9H4CPPOEMR62088",
                            Year = new DateTime(2020, 12, 17, 1, 3, 59, 343, DateTimeKind.Local).AddTicks(8068)
                        },
                        new
                        {
                            Id = 10,
                            CarGear = 2,
                            Color = "red",
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Manufacturer = "Chevrolet",
                            Model = "Explorer",
                            RegistrationNumber = "TM 927 ESZ",
                            Vin = "ATK25E0B3WWY71897",
                            Year = new DateTime(2021, 3, 12, 10, 12, 39, 529, DateTimeKind.Local).AddTicks(8195)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Identity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Birthday")
                        .HasMaxLength(50)
                        .HasColumnType("date");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1974, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Celia_Davis@hotmail.com",
                            FirstName = "Celia",
                            LastName = "Davis",
                            Password = "test",
                            PhoneNumber = "+40 746 964 446",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1985, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Devin83@gmail.com",
                            FirstName = "Devin",
                            LastName = "Little",
                            Password = "test",
                            PhoneNumber = "+40 743 381 834",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1996, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Clifton_Okuneva@gmail.com",
                            FirstName = "Clifton",
                            LastName = "Okuneva",
                            Password = "test",
                            PhoneNumber = "+40 747 565 216",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1982, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Pauline_Daugherty@yahoo.com",
                            FirstName = "Pauline",
                            LastName = "Daugherty",
                            Password = "test",
                            PhoneNumber = "+40 742 478 065",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1995, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Janie32@gmail.com",
                            FirstName = "Janie",
                            LastName = "Satterfield",
                            Password = "test",
                            PhoneNumber = "+40 747 590 444",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(1985, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Colin.Cronin@hotmail.com",
                            FirstName = "Colin",
                            LastName = "Cronin",
                            Password = "test",
                            PhoneNumber = "+40 743 983 542",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateTime(1974, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Freddie.Stiedemann87@gmail.com",
                            FirstName = "Freddie",
                            LastName = "Stiedemann",
                            Password = "test",
                            PhoneNumber = "+40 747 730 492",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateTime(1994, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Nick.Wilderman60@hotmail.com",
                            FirstName = "Nick",
                            LastName = "Wilderman",
                            Password = "test",
                            PhoneNumber = "+40 748 485 882",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateTime(1989, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Tanya.Luettgen@hotmail.com",
                            FirstName = "Tanya",
                            LastName = "Luettgen",
                            Password = "test",
                            PhoneNumber = "+40 747 220 837",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 10,
                            Birthday = new DateTime(1992, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Donnie_Borer30@hotmail.com",
                            FirstName = "Donnie",
                            LastName = "Borer",
                            Password = "test",
                            PhoneNumber = "+40 742 590 793",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 11,
                            Birthday = new DateTime(1996, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Vickie14@yahoo.com",
                            FirstName = "Vickie",
                            LastName = "Borer",
                            Password = "test",
                            PhoneNumber = "+40 749 852 232",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 12,
                            Birthday = new DateTime(1998, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Hannah.Welch43@gmail.com",
                            FirstName = "Hannah",
                            LastName = "Welch",
                            Password = "test",
                            PhoneNumber = "+40 748 975 984",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 13,
                            Birthday = new DateTime(1973, 12, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Willie_Kertzmann47@yahoo.com",
                            FirstName = "Willie",
                            LastName = "Kertzmann",
                            Password = "test",
                            PhoneNumber = "+40 744 836 590",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 14,
                            Birthday = new DateTime(1989, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Ronnie_Boyle27@gmail.com",
                            FirstName = "Ronnie",
                            LastName = "Boyle",
                            Password = "test",
                            PhoneNumber = "+40 740 773 284",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 15,
                            Birthday = new DateTime(1992, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Russell_Corkery@yahoo.com",
                            FirstName = "Russell",
                            LastName = "Corkery",
                            Password = "test",
                            PhoneNumber = "+40 741 645 125",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 16,
                            Birthday = new DateTime(1980, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Allen31@gmail.com",
                            FirstName = "Allen",
                            LastName = "Barton",
                            Password = "test",
                            PhoneNumber = "+40 741 666 019",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 17,
                            Birthday = new DateTime(1996, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Gregg26@yahoo.com",
                            FirstName = "Gregg",
                            LastName = "Harber",
                            Password = "test",
                            PhoneNumber = "+40 749 413 264",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 18,
                            Birthday = new DateTime(1995, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Barbara.Predovic67@gmail.com",
                            FirstName = "Barbara",
                            LastName = "Predovic",
                            Password = "test",
                            PhoneNumber = "+40 742 591 086",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 19,
                            Birthday = new DateTime(1985, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Casey42@hotmail.com",
                            FirstName = "Casey",
                            LastName = "Hagenes",
                            Password = "test",
                            PhoneNumber = "+40 744 700 580",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 20,
                            Birthday = new DateTime(1994, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Carrie47@yahoo.com",
                            FirstName = "Carrie",
                            LastName = "Johnson",
                            Password = "test",
                            PhoneNumber = "+40 747 645 343",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 21,
                            Birthday = new DateTime(1983, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Elvira51@gmail.com",
                            FirstName = "Elvira",
                            LastName = "Conroy",
                            Password = "test",
                            PhoneNumber = "+40 741 130 401",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 22,
                            Birthday = new DateTime(1979, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Justin98@yahoo.com",
                            FirstName = "Justin",
                            LastName = "Crist",
                            Password = "test",
                            PhoneNumber = "+40 748 305 797",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 23,
                            Birthday = new DateTime(1996, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Shannon24@gmail.com",
                            FirstName = "Shannon",
                            LastName = "Spencer",
                            Password = "test",
                            PhoneNumber = "+40 740 885 568",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 24,
                            Birthday = new DateTime(1988, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Paul32@hotmail.com",
                            FirstName = "Paul",
                            LastName = "Hamill",
                            Password = "test",
                            PhoneNumber = "+40 748 860 452",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 25,
                            Birthday = new DateTime(1973, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Sylvia.Von58@yahoo.com",
                            FirstName = "Sylvia",
                            LastName = "Von",
                            Password = "test",
                            PhoneNumber = "+40 742 814 763",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 26,
                            Birthday = new DateTime(1977, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Ollie.Grady@hotmail.com",
                            FirstName = "Ollie",
                            LastName = "Grady",
                            Password = "test",
                            PhoneNumber = "+40 741 660 734",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 27,
                            Birthday = new DateTime(1988, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Courtney.Weissnat@yahoo.com",
                            FirstName = "Courtney",
                            LastName = "Weissnat",
                            Password = "test",
                            PhoneNumber = "+40 743 488 529",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 28,
                            Birthday = new DateTime(1987, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Billy.Schmeler29@gmail.com",
                            FirstName = "Billy",
                            LastName = "Schmeler",
                            Password = "test",
                            PhoneNumber = "+40 745 788 434",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 29,
                            Birthday = new DateTime(1983, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Ellis.Rath@gmail.com",
                            FirstName = "Ellis",
                            LastName = "Rath",
                            Password = "test",
                            PhoneNumber = "+40 745 539 503",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 30,
                            Birthday = new DateTime(1995, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Eunice_Hartmann84@hotmail.com",
                            FirstName = "Eunice",
                            LastName = "Hartmann",
                            Password = "test",
                            PhoneNumber = "+40 746 038 497",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 31,
                            Birthday = new DateTime(1973, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Leon8@gmail.com",
                            FirstName = "Leon",
                            LastName = "Bahringer",
                            Password = "test",
                            PhoneNumber = "+40 741 467 367",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 32,
                            Birthday = new DateTime(1977, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Rex_Crist92@hotmail.com",
                            FirstName = "Rex",
                            LastName = "Crist",
                            Password = "test",
                            PhoneNumber = "+40 743 797 312",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 33,
                            Birthday = new DateTime(1975, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Larry_Feil@yahoo.com",
                            FirstName = "Larry",
                            LastName = "Feil",
                            Password = "test",
                            PhoneNumber = "+40 746 837 518",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 34,
                            Birthday = new DateTime(1975, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Roberto64@hotmail.com",
                            FirstName = "Roberto",
                            LastName = "Johnson",
                            Password = "test",
                            PhoneNumber = "+40 744 554 287",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 35,
                            Birthday = new DateTime(1989, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Ollie_Rau@gmail.com",
                            FirstName = "Ollie",
                            LastName = "Rau",
                            Password = "test",
                            PhoneNumber = "+40 749 185 137",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 36,
                            Birthday = new DateTime(1975, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Joshua_Gislason79@yahoo.com",
                            FirstName = "Joshua",
                            LastName = "Gislason",
                            Password = "test",
                            PhoneNumber = "+40 747 875 516",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 37,
                            Birthday = new DateTime(1997, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Jacquelyn93@gmail.com",
                            FirstName = "Jacquelyn",
                            LastName = "Abbott",
                            Password = "test",
                            PhoneNumber = "+40 745 897 819",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 38,
                            Birthday = new DateTime(1986, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Courtney46@hotmail.com",
                            FirstName = "Courtney",
                            LastName = "Konopelski",
                            Password = "test",
                            PhoneNumber = "+40 745 367 305",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 39,
                            Birthday = new DateTime(1988, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Don_VonRueden49@hotmail.com",
                            FirstName = "Don",
                            LastName = "VonRueden",
                            Password = "test",
                            PhoneNumber = "+40 748 036 666",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 40,
                            Birthday = new DateTime(1975, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Isabel_Barrows@hotmail.com",
                            FirstName = "Isabel",
                            LastName = "Barrows",
                            Password = "test",
                            PhoneNumber = "+40 748 872 640",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 41,
                            Birthday = new DateTime(1998, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Duane_Murphy76@yahoo.com",
                            FirstName = "Duane",
                            LastName = "Murphy",
                            Password = "test",
                            PhoneNumber = "+40 744 593 423",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 42,
                            Birthday = new DateTime(1991, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Homer.Purdy@gmail.com",
                            FirstName = "Homer",
                            LastName = "Purdy",
                            Password = "test",
                            PhoneNumber = "+40 746 482 790",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 43,
                            Birthday = new DateTime(1977, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Carolyn14@yahoo.com",
                            FirstName = "Carolyn",
                            LastName = "Deckow",
                            Password = "test",
                            PhoneNumber = "+40 747 021 182",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 44,
                            Birthday = new DateTime(1989, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Vivian.Maggio22@hotmail.com",
                            FirstName = "Vivian",
                            LastName = "Maggio",
                            Password = "test",
                            PhoneNumber = "+40 742 063 443",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 45,
                            Birthday = new DateTime(1991, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Ramon73@gmail.com",
                            FirstName = "Ramon",
                            LastName = "O'Conner",
                            Password = "test",
                            PhoneNumber = "+40 749 795 409",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 46,
                            Birthday = new DateTime(1979, 12, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Roger_Brekke44@hotmail.com",
                            FirstName = "Roger",
                            LastName = "Brekke",
                            Password = "test",
                            PhoneNumber = "+40 740 449 287",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 47,
                            Birthday = new DateTime(1995, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Ralph66@gmail.com",
                            FirstName = "Ralph",
                            LastName = "Ankunding",
                            Password = "test",
                            PhoneNumber = "+40 749 396 483",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 48,
                            Birthday = new DateTime(1993, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Garrett14@gmail.com",
                            FirstName = "Garrett",
                            LastName = "Connelly",
                            Password = "test",
                            PhoneNumber = "+40 740 621 804",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 49,
                            Birthday = new DateTime(1991, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Ginger.Armstrong@gmail.com",
                            FirstName = "Ginger",
                            LastName = "Armstrong",
                            Password = "test",
                            PhoneNumber = "+40 743 272 815",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 50,
                            Birthday = new DateTime(1979, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 1, 11, 50, 43, 880, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            Email = "Kelly_Pouros@yahoo.com",
                            FirstName = "Kelly",
                            LastName = "Pouros",
                            Password = "test",
                            PhoneNumber = "+40 746 068 948",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GearType")
                        .HasColumnType("int");

                    b.Property<int>("IdentityId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 12, 57, 29, 337, DateTimeKind.Unspecified).AddTicks(953), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            GearType = 1,
                            IdentityId = 1,
                            Location = "Strada Crișul 7"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 12, 57, 29, 337, DateTimeKind.Unspecified).AddTicks(953), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            GearType = 2,
                            IdentityId = 8,
                            Location = "Strada Crișul 7"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 12, 57, 29, 337, DateTimeKind.Unspecified).AddTicks(953), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            GearType = 2,
                            IdentityId = 19,
                            Location = "Strada Crișul 7"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 12, 57, 29, 337, DateTimeKind.Unspecified).AddTicks(953), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            GearType = 1,
                            IdentityId = 23,
                            Location = "Strada Crișul 7"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 12, 57, 29, 337, DateTimeKind.Unspecified).AddTicks(953), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            GearType = 1,
                            IdentityId = 24,
                            Location = "Strada Crișul 7"
                        });
                });

            modelBuilder.Entity("Domain.Entities.InstructorCar", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("InstructorId", "CarId");

                    b.HasIndex("CarId");

                    b.ToTable("InstructorCars");

                    b.HasData(
                        new
                        {
                            InstructorId = 1,
                            CarId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 337, DateTimeKind.Unspecified).AddTicks(224), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Id = 1
                        },
                        new
                        {
                            InstructorId = 1,
                            CarId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 337, DateTimeKind.Unspecified).AddTicks(224), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Id = 2
                        },
                        new
                        {
                            InstructorId = 2,
                            CarId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 337, DateTimeKind.Unspecified).AddTicks(224), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Id = 3
                        },
                        new
                        {
                            InstructorId = 2,
                            CarId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 337, DateTimeKind.Unspecified).AddTicks(224), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Id = 4
                        },
                        new
                        {
                            InstructorId = 2,
                            CarId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 337, DateTimeKind.Unspecified).AddTicks(224), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Id = 5
                        },
                        new
                        {
                            InstructorId = 2,
                            CarId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 15, 57, 29, 337, DateTimeKind.Unspecified).AddTicks(224), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "System Migration",
                            Id = 6
                        });
                });

            modelBuilder.Entity("Domain.Entities.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LessonStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.HasIndex("ReviewId")
                        .IsUnique()
                        .HasFilter("[ReviewId] IS NOT NULL");

                    b.HasIndex("StudentId");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 12, 57, 29, 338, DateTimeKind.Unspecified).AddTicks(7214), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            InstructorId = 1,
                            LessonStatus = 0,
                            StartTime = new DateTimeOffset(new DateTime(2023, 7, 25, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 12, 57, 29, 338, DateTimeKind.Unspecified).AddTicks(7214), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            InstructorId = 2,
                            LessonStatus = 0,
                            StartTime = new DateTimeOffset(new DateTime(2023, 7, 25, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 12, 57, 29, 338, DateTimeKind.Unspecified).AddTicks(7214), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            InstructorId = 1,
                            LessonStatus = 0,
                            StartTime = new DateTimeOffset(new DateTime(2023, 7, 25, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            StudentId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GearType")
                        .HasColumnType("int");

                    b.Property<int>("IdentityId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 12, 57, 29, 340, DateTimeKind.Unspecified).AddTicks(6509), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            GearType = 1,
                            IdentityId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 5, 24, 12, 57, 29, 340, DateTimeKind.Unspecified).AddTicks(6509), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System Seeding",
                            GearType = 1,
                            IdentityId = 7
                        });
                });

            modelBuilder.Entity("Domain.Entities.Authorization.PolicyRole", b =>
                {
                    b.HasOne("Domain.Entities.Authorization.Policy", "Policy")
                        .WithMany("PolicyRoles")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Authorization.Role", "Role")
                        .WithMany("PolicyRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Policy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.Entities.Identity", b =>
                {
                    b.HasOne("Domain.Entities.Authorization.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.Entities.Instructor", b =>
                {
                    b.HasOne("Domain.Entities.Identity", "Identity")
                        .WithMany()
                        .HasForeignKey("IdentityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Identity");
                });

            modelBuilder.Entity("Domain.Entities.InstructorCar", b =>
                {
                    b.HasOne("Domain.Entities.Car", "Car")
                        .WithMany("InstructorCars")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Instructor", "Instructor")
                        .WithMany("InstructorCars")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Domain.Entities.Lesson", b =>
                {
                    b.HasOne("Domain.Entities.Instructor", "Instructor")
                        .WithMany("Lessons")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Review", "Review")
                        .WithOne("Lesson")
                        .HasForeignKey("Domain.Entities.Lesson", "ReviewId");

                    b.HasOne("Domain.Entities.Student", "Student")
                        .WithMany("Lessons")
                        .HasForeignKey("StudentId");

                    b.Navigation("Instructor");

                    b.Navigation("Review");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.HasOne("Domain.Entities.Identity", "Identity")
                        .WithMany("Students")
                        .HasForeignKey("IdentityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Identity");
                });

            modelBuilder.Entity("Domain.Entities.Authorization.Policy", b =>
                {
                    b.Navigation("PolicyRoles");
                });

            modelBuilder.Entity("Domain.Entities.Authorization.Role", b =>
                {
                    b.Navigation("PolicyRoles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Entities.Car", b =>
                {
                    b.Navigation("InstructorCars");
                });

            modelBuilder.Entity("Domain.Entities.Identity", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Domain.Entities.Instructor", b =>
                {
                    b.Navigation("InstructorCars");

                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("Domain.Entities.Review", b =>
                {
                    b.Navigation("Lesson")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
